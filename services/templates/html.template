{%extends "components/includes/base.html"%}
{%block content%}
    <!-- Main jumbotron for a primary marketing message or call to action -->
    <div class="jumbotron">
      <div class="container">
        <h1>Templates</h1>
      </div>
    </div>

    <div class="container">
      <!-- Example row of columns -->
      <div class="row">
        <div class="col-xs-10 col-sm-10 col-md-10 col-lg-10">
          <h2>Jinja</h2>
          <p>FLOD uses Jinja2 templates for rendering content. Jinja is a very powerful template engine that allow developers to create content easily. It supports extension, blocks, filters and many other goodies. More information in the <a href='http://jinja.pocoo.org/docs/'>Jinja documentation website</a>.</p>
          <h3>Variables</h3>
          <p>FLOD provides a series of variables that can be used in any template or query.</p>
          <ul>
            <li><code>uri</code> The URI requested</li>
            <li><code>flod.*</code> are variables defined by the developer in <code>settings.json</code>. See more details in <a href='/settings'>settings section</a>.</li>
            <li><code>session.*</code> provides information about the user and its session, when the <strong>Users</strong> module is active. Currently, the data available is:
              <ul>
                <li><code>session.username</code> the username of the user</li>
                <li><code>session.uri</code> the URI of the user</li>
                <li><code>session.groups</code> an array of groups where the user belonged</li>
                <li><code>session.params</code> a dictionary of custom parameters defined in <code>users.ttl</code> in the form <code> ex:user a flod:User; flod:parameter [ flod:parameterName "parameterName" ; flod:parameterValue "value" ] .</code></li>
                <li><code>session.salt</code> the salt for the password of the user</li>
              </ul>
            </li>
            <li><code>queries.QUERYNAME</code> an array of results for all the SPARQL queries executed. Each array contains two values:
              <ul>
                <li><code>row.VARNAME.value</code> the value obtained from the SPARQL results. <strong>NOTE:</strong> if the mirroring option is <code>true</code>, the URIs from the origin namespace will be translated to the local namespace. If the value is not a URI, there is no change.</li>
                <li><code>row.VARNAME.curie</code> the CURIe version of the URI. Same mirroring applies here. If the value is not a URI, this variable contains the same value as <code>row.VARNAME.value</code>.</li>
              </ul>
            </li>
            <li><code>args[]</code> (<strong>Only in Services module</strong>) returns the segments in a URI after the service name (e.g., <code>http://example.org/foo/bar/123</code>, then <code>arg[0]</code> is <code>bar</code> and <code>arg[1]</code> is <code>123</code>).</li>
          </ul>
        </div>
      </div>
     <div class="row">
       <h2>Using results on a template</h2>
       <p>There are two ways to make use of the results: By iterating a result set or by choosing only the first "row" of results. For example, if we want to obtain a set of names of people from dbpedia, we can whether iterate it or use only the first:</p>
       <h3><tt>names.query</tt></h3>
       <pre>
        <code>
PREFIX foaf: &lt;http://xmlns.com/foaf/0.1/&gt;

select DISTINCT ?person (SAMPLE(?n) AS ?name) where{
  ?person a foaf:Person;
          foaf:name ?n
}limit 20
        </code>
       </pre>
       <h3>template</h3>
       <pre><code>{% raw %}
&lt;ul&gt;
{%for row in queries.names %}
  &lt;li&gt;{{row.name.value}}&lt;/li&gt;
{%endfor%}
&lt;/ul&gt;
&lt;p&gt;The first person in the list is &lt;a href='{{first.names.person.value}}&gt;{{first.names.name.value}}&lt;a&gt;&lt;/p&gt;
{%endraw%}
</code>
</pre>
<h3>Results</h3>
{%if queries.names%}
<ul>
{%for row in queries.names %}
  <li>{{row.name.value}}</li>
{%endfor%}
</ul>
<p> The first person in the list is <a href='{{first.names.person.value}}'>{{first.names.name.value}}</a>.</p>
{%else%}
<div class="panel panel-danger">
    <div class="panel-heading">
      <h3 class="panel-title">Error retrieving data</h3>
    </div>
    <div class="panel-body">
      FLOD could not obtain a valid response from dbpedia at this moment.
    </div>
</div>
{%endif%}
     </div>
     <div class="row">
       <h2>Visual Filters</h2>
       <p>Visual Filters are a simple way to create visualizations out of sparql queries. The developer must pass the results obtained from a SPARQL query and indicate some parameters in order to obtain a visualization</p>
       <h3>Cities where World Cup finals have been played (according to dbpedia)</h3>
       <h4><tt>finals.query</tt></h4>
       <pre>
       <code>
PREFIX geo: &lt;http://www.w3.org/2003/01/geo/wgs84_pos#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;
PREFIX dbp: &lt;http://dbpedia.org/ontology/&gt;

SELECT DISTINCT ?city (SAMPLE(?lat1) AS ?lat) (SAMPLE(?lon1) AS ?lon) WHERE{
 ?city    geo:lat ?lat1;
          geo:long ?lon1;
          rdfs:label ?capitalName .
 ?final dcterms:subject &lt;http://dbpedia.org/resource/Category:FIFA_World_Cup_finals&gt;;
        dbp:city ?city.

}
limit 100
</code>
</pre>
<h4>Template</h4>
<pre>
<code>

{%raw%}
{{queries.finals|GoogleMaps(lat="lat",lon="lon",width=900,height=500)}}
{%endraw%}
</code>
</pre>
<h4>Result</h4>
{%if queries.finals%}
{{queries.finals|GoogleMaps(lat="lat",lon="lon",width=900,height=500)}}
{%else%}
<div class="panel panel-danger">
    <div class="panel-heading">
      <h3 class="panel-title">Error retrieving data</h3>
    </div>
    <div class="panel-body">
      FLOD could not obtain a valid response from dbpedia at this moment.
    </div>
</div>
{%endif%}
<h3>Attendance to each final of the World Cup (according to dbpedia)</h3>

<h4><tt>attendance.query</tt></h4>

<pre>
<code>
PREFIX geo: &lt;http://www.w3.org/2003/01/geo/wgs84_pos#&gt;
PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
PREFIX dcterms: &lt;http://purl.org/dc/terms/&gt;
PREFIX dbp: &lt;http://dbpedia.org/ontology/&gt;

SELECT DISTINCT * WHERE{

 ?final dcterms:subject &lt;http://dbpedia.org/resource/Category:FIFA_World_Cup_finals&gt;;
        &lt;http://dbpedia.org/property/event&gt; ?event;
        &lt;http://dbpedia.org/property/attendance&gt; ?attendance .
FILTER (xsd:integer(?attendance) > 0)

}order by ?event
limit 100
</code>
</pre>

<h4>template</h4>

<pre>
<code>
{%raw%}
{{queries.attendance|BarChart(x="event", y="attendance",width=900,height=500)}}
{%endraw%}
</code>
</pre>
<h4>Results</h4>
{%if queries.attendance%}
{{queries.attendance|BarChart(x="event", y="attendance",width=900,height=500)}}
{%else%}
<div class="panel panel-danger">
    <div class="panel-heading">
      <h3 class="panel-title">Error retrieving data</h3>
    </div>
    <div class="panel-body">
      FLOD could not obtain a valid response from dbpedia at this moment.
    </div>
</div>
{%endif%}
     </div>
    </div>


{%endblock%}
